#[*] located /etc/apache2/sites-enabled/000-default.conf
#[*] HTTPS ONLY CONF
#[*] TESTED For 80 redir to 443 with ssl working conf
<VirtualHost *:80>
     #ServerName Replace_Server_Name
     
     #[*] Setting below is for HTTP->HTTPS Redirect on Apache Replace the value below
     #Redirect permanent / https://ReDir_IP_or_Domain
     
    #[*]SIEM CONFIG
    SetEnv backend_name decoy
    SetEnv hostname Replace_Server_Name
    SetEnv frontend_name www-http
    LogFormat "%t %{hostname}e apache[%P]: frontend:%{frontend_name}e/%A:%{local}p backend:%{backend_name}e client:%h:%{remote}p xforwardedfor:%{X-Forwarded-For}i headers:{%{User-Agent}i|%{Host}i|%{X-Forwarded-For}i|%{X-Forwarded-Proto}i|%{X-Host}i|%{Forwarded}i|%{Via}i|} statuscode:%s request:%r"  redelklogformat
    CustomLog ${APACHE_LOG_DIR}/access-redelk.log redelklogformat
    
        #<Directory /var/www/html>
                #Options -Indexes -Includes -ExecCGI -MultiViews
                #AllowOverride All
                #Order allow,deny
                #allow from all
		#LimitRequestBody  52428800
     		#<LimitExcept GET POST>
		  #deny from all
		#</LimitExcept>		
      #</Directory>

    #ServerAdmin webmaster@localhost
    #DocumentRoot /var/www/html
    #LogLevel rewrite trace6
    #ErrorLog ${APACHE_LOG_DIR}/error.log
    #CustomLog ${APACHE_LOG_DIR}/access.log combined
 
	#<Files "ReplaceFIlePath">
        #Require method POST
        #</Files>
</VirtualHost>


#[*] RUN 'a2enmod ssl' to enable SSL/TLS Manually
#[*] RUN sudo hostnamectl set-hostname {DOMAIN} (if needed)
#[*] Setup global fqdn apache  'sudo echo "ServerName {Server hostname}" | sudo tee /etc/apache2/conf-available/fqdn.conf '
#[*] Check config syntax 'apache2ctl configtest'
<VirtualHost *:443>
    #[*] Replace Setting below to set hostname to use in Apache once its changes in server settings
    #ServerName Replace_Server_Name
    
    #Redirect permanent / https://ReDir_IP_or_Domain

    #[*] Enable SSL
    SSLEngine On
	
	#[*] Enable SSL Proxy
	SSLProxyEngine On
	
	#[*] Trust Self-Signed Certificates generated on final dest 
	SSLProxyVerify none
	SSLProxyCheckPeerCN off
	SSLProxyCheckPeerName off
	SSLProxyCheckPeerExpire off
	
    #[*] The path to the SSL/TLS files
    SSLCertificateFile Path_to_crt
    SSLCertificateKeyFile PATH_to_Private_key
    SSLCertificateChainFile PATH_to_ca_bundle
     
    #[*]SIEM CONFIG
    SetEnv backend_name decoy
    SetEnv hostname Replace_Server_Name
    SetEnv frontend_name www-http
    LogFormat "%t %{hostname}e apache[%P]: frontend:%{frontend_name}e/%A:%{local}p backend:%{backend_name}e client:%h:%{remote}p xforwardedfor:%{X-Forwarded-For}i headers:{%{User-Agent}i|%{Host}i|%{X-Forwarded-For}i|%{X-Forwarded-Proto}i|%{X-Host}i|%{Forwarded}i|%{Via}i|} statuscode:%s request:%r"  redelklogformat
    CustomLog ${APACHE_LOG_DIR}/access-redelk.log redelklogformat
    	
    <Directory /var/www/html>
        Options -Indexes -Includes -ExecCGI -MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
	LimitRequestBody  52428800

        <LimitExcept GET POST>
          deny from all
	</LimitExcept>

    </Directory>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html
        #LogLevel rewrite trace6
        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined
	
    #[*] Uncomment section below to make a file on the system accessable by the web service HTTP POST ONLY
	#<Files "FILE_Path_To_POST_only_File">
        #Require method POST
    #</Files>

</VirtualHost>
